// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model pengguna_dashboard {
  id_pengguna        Int            @id @default(autoincrement())
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  email              String         @unique
  password           String
  peran              peran_pengguna @default(USER)
  nama               String
  kegiatan_di_kelola kegiatan[]     @relation("pengelola_kegiatan")
}

model kegiatan {
  id_kegiatan     Int                @id @default(autoincrement())
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  judul           String
  deskripsi       String?
  waktu           DateTime
  kordinat_lokasi String
  qr_code         String?            @default("0")
  id_pengguna     Int
  pengelola       pengguna_dashboard @relation(fields: [id_pengguna], references: [id_pengguna], name: "pengelola_kegiatan")
  attendees       kehadiran[]
}

model siswa {
  NISN             Int         @id @default(autoincrement())
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  nama             String
  tanggal_lahir    DateTime
  email            String      @unique
  kelas            String
  device_id        String
  daftar_kehadiran kehadiran[]
}

model kehadiran {
  id_kehadiran  Int              @id @default(autoincrement())
  waktu_tanggal DateTime         @default(now())
  NISN          Int
  id_kegiatan   Int
  status        status_kehadiran @default(ABSEN)
  siswa         siswa            @relation(fields: [NISN], references: [NISN])
  kegiatan      kegiatan         @relation(fields: [id_kegiatan], references: [id_kegiatan])
}

enum peran_pengguna {
  ADMIN
  GURU
  USER
}

enum status_kehadiran {
  HADIR
  ABSEN
  TERLAMBAT
  IZIN
}
