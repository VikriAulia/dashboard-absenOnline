// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PenggunaDashboard {
  id                 Int           @id @default(autoincrement())
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  email              String        @unique
  password           String
  peran              PeranPengguna @default(USER)
  nama               String
  kegiatan_di_kelola Kegiatan[]    @relation("pengelola_kegiatan")

  @@map("pengguna_dashboard")
}

model Jadwal {
  id         Int        @id @default(autoincrement())
  createAt   DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  nama       String
  mulai      DateTime   @db.Time()
  selesai    DateTime   @db.Time()
  keterangan String     @default("-")
  kegiatan   Kegiatan[]

  @@map("jadwal")
}

model Lokasi {
  id        Int        @id @default(autoincrement())
  createAt  DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  nama      String
  latitude  String
  longitude String
  area      Int
  kegiatan  Kegiatan[]

  @@map("lokasi")
}

model Kegiatan {
  id          Int               @id @default(autoincrement())
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  judul       String
  deskripsi   String?
  id_jadwal   Int
  id_pengguna Int
  id_lokasi   Int
  jadwal      Jadwal            @relation(fields: [id_jadwal], references: [id])
  pengelola   PenggunaDashboard @relation(fields: [id_pengguna], references: [id], name: "pengelola_kegiatan")
  lokasi      Lokasi            @relation(fields: [id_lokasi], references: [id])
  kehadiran   Kehadiran[]
  qrcode      QrCode?

  @@map("kegiatan")
}

model QrCode {
  id          Int      @id @default(autoincrement())
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
  id_kegiatan Int      @unique
  key         String
  kegiatan    Kegiatan @relation(fields: [id_kegiatan], references: [id])

  @@map("qr_code")
}

model Siswa {
  NISN             Int         @id @default(autoincrement())
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  nama             String
  tanggal_lahir    DateTime
  email            String      @unique
  kelas            String
  device_id        String
  daftar_kehadiran Kehadiran[]

  @@map("siswa")
}

model Kehadiran {
  id            Int             @id @default(autoincrement())
  createAt      DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  waktu_tanggal DateTime        @default(now())
  NISN          Int
  id_kegiatan   Int
  status        StatusKehadiran @default(ABSEN)
  siswa         Siswa           @relation(fields: [NISN], references: [NISN])
  kegiatan      Kegiatan        @relation(fields: [id_kegiatan], references: [id])

  @@map("kehadiran")
}

enum PeranPengguna {
  ADMIN
  GURU
  USER
}

enum StatusKehadiran {
  HADIR
  ABSEN
  TERLAMBAT
  IZIN
}
